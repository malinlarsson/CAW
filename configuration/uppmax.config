/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 * Nextflow config file for CAW project
 * working on milou (UPPMAX)
 * -------------------------------------------------
 * Should be saved either within CAW installation
 * as nextflow.config, or with Nextflow installation
 * as $NXF_HOME/config
 */

process {
  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxErrors = '-1'
  maxRetries = 3

  $BuildBWAindexes {
  }
  $BuildPicardIndex {
  }
  $BuildSAMToolsIndex {
  }
  $BuildVCFIndex {
  }
  $ConcatVCF {
  }
  $CreateRecalibrationTable {
    time = {params.runTime * 2 * task.attempt}
    cpus = 10
    memory = {params.singleCPUMem * 8 * task.attempt}
  }
  $IndelRealigner {
    time = {params.runTime * 2 * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt}
  }
  $MapReads {
    time = {params.runTime * task.attempt}
  }
  $MarkDuplicates {
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * 8 * task.attempt}
  }
  $MergeBams {
    time = {params.runTime * task.attempt}
    memory = {params.singleCPUMem * task.attempt}
  }
  $RealignerTargetCreator {
    time = {params.runTime * 2 * task.attempt}
  }
  $RecalibrateBam {
    time = {params.runTime * 2 * task.attempt}
    cpus = 8
    memory = {params.singleCPUMem * 8 * task.attempt}
  }
  $RunAlleleCount {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunAscat {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunBcftoolsStats {
    cpus = 1
  }
  $RunConvertAlleleCounts {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunFastQC {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunFreeBayes {
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunHaplotypecaller {
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt * task.attempt } // this way the memory will increase quadratically as 8G, 32G, 72G
  }
  $RunGenotypeGVCFs {
    cpus = 1
    memory = {params.singleCPUMem}
  }
  $RunManta {
  }
  $RunMultiQC {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunMutect1 {
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunMutect2 {
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunSamtoolsStats {
    time = {params.runTime * task.attempt}
    cpus = 1
  }
  $RunSnpeff {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunStrelka {
    time = {params.runTime * task.attempt}
  }
  $RunVEP {
    cpus = 1
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
}
